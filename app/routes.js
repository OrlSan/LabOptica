// Generated by CoffeeScript 1.8.0

/*
 * app/routes.coffee -> app/routes.js
 *
 * Rutas del servidor para la aplicación LabOptica, rutas
 * que responden las peticiones web para interactuar con el
 * frontend.
 */
var Datos, User, apiRouter, isLoggedIn, isSessioned;

User = require('./models/User');

Datos = require('./models/Datos');

apiRouter = require('./api');

module.exports = function(app, passport) {
  app.get('/', function(req, res) {
    if (req.isAuthenticated()) {
      return res.redirect('/dashboard');
    } else {
      return res.render('index.jade');
    }
  });
  app.get('/dashboard', isLoggedIn, function(req, res) {
    return res.render('dashboard.jade', req.user);
  });
  app.post('/login', passport.authenticate('local-login', {
    successRedirect: '/dashboard',
    failureRedirect: '/'
  }));
  app.get('/datos', isLoggedIn, function(req, res) {
    return res.render('datos.jade', req.user);
  });
  app.use('/datos.json', apiRouter);
  app.get('/newPass', isLoggedIn, function(req, res) {
    return res.render('newPass.jade');
  });
  app.post('/newPass', isLoggedIn, function(req, res) {
    console.log("recibida petición post");
    console.log(req.body);
    return User.findOne({
      _id: req.user.id
    }, function(err, user) {
      if (err) {
        res.json({
          success: false,
          message: "Hubo un error con tu sesión, por favor repórtalo e inténtalo de nuevo"
        });
      }
      if (user) {
        return user.isValidPass(req.body.oldPass, function(passErr, isValid) {
          if (passErr) {
            res.json({
              success: false,
              message: "Hubo un error al procesar la contraseña. Pide ayuda e intenta de nuevo."
            });
          }
          if (isValid) {
            return User.genHash(req.body.newPass, function(genErr, newHash) {
              user.Pass = newHash;
              return user.save(function(err) {
                if (err) {
                  console.log("Error al guardar: " + err);
                  return res.json({
                    success: false,
                    message: 'No se pudo completar la operación. Pide ayuda.'
                  });
                } else {
                  return res.json({
                    success: true,
                    message: "El password fue actualizado correctamente."
                  });
                }
              });
            });
          } else {
            return res.json({
              success: false,
              message: "Parece que tu password no es válido, verifícalo."
            });
          }
        });
      }
    });
  });
  return app.get('/logout', isLoggedIn, function(req, res) {
    req.logout();
    return res.redirect('/');
  });
};

isLoggedIn = function(req, res, next) {
  if (req.isAuthenticated()) {
    return next();
  } else {
    return res.redirect('/');
  }
};

isSessioned = function(req, res, next) {
  if (req.isAuthenticated()) {
    return next();
  } else {
    return res.json({
      error: "Debes iniciar sesión para continuar."
    });
  }
};
