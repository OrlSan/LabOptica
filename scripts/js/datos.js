// Generated by CoffeeScript 1.8.0

/*
 * Datos.coffee | js
 *
 * Modelo, vista y controlador para interactuar con los datos de
 * la aplicación LabOptica para crear, modificar y relacionar los
 * datos a través de peticiones a la API.
 *
 * (c) 2014, Orlando Rey Sánchez.
 */

(function() {
  var ColMuestras, GetUrlParameter, GlobalView, Muestra, SingleDataView, col, globView;

  GetUrlParameter = function(sParam) {
    var item, sPageURL, sParameterName, sURLVariables, _i, _len;
    sPageURL = window.location.search.substring(1);
    sURLVariables = sPageURL.split('&');
    for (_i = 0, _len = sURLVariables.length; _i < _len; _i++) {
      item = sURLVariables[_i];
      sParameterName = item.split('=');
      if (sParameterName[0] === sParam) {
        return sParameterName[1];
      }
    }
  };

  Muestra = Backbone.Model.extend({
    idAttribute: '_id',
    initialize: function() {
      this.set('Mensaje', false);
    },
    urlRoot: '/datos.json'
  });

  ColMuestras = Backbone.Collection.extend({
    model: Muestra,
    className: 'list-group',
    tagname: 'li',
    lastDate: null,
    url: GetUrlParameter('date') ? '/datos.json?date=' + GetUrlParameter("date") : '/datos.json',
    initialize: function() {
      console.log(this.url);
      this.fetch({
        async: false
      });
    }
  });

  GlobalView = Backbone.View.extend({
    tagname: 'ul',
    className: 'list-group',
    render: function() {
      this.collection.each(function(data) {
        var singleView;
        singleView = new SingleDataView({
          model: data
        });
        return this.$el.append(singleView.render().el);
      }, this);
      return this;
    },
    initialize: function(options) {
      this.listenTo(this.collection, 'add remove', this.render);
    }
  });

  SingleDataView = Backbone.View.extend({
    tagName: 'li',
    myTemplate: _.template($('#dataTemplate').html()),
    className: 'list-group-item',
    initialize: function() {
      this.model.on('change', this.render, this);
    },
    render: function() {
      this.$el.html(this.myTemplate(this.model.attributes));
      return this;
    }
  });

  col = new ColMuestras();

  globView = new GlobalView({
    collection: col
  });

  $(".pantalla").html(globView.render().el);

  $('form').on('submit', function(event) {
    return event.preventDefault();
  });

}).call(this);
